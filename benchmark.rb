require 'benchmark'

STRING_SHORT_HASH = {'foo' => 'bar'}
STRING_LONG_HASH = {'foo1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890' => 'bar1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'}
SYMBOL_SHORT_HASH = {:foo  => 'bar'}
SYMBOL_LONG_HASH = {:foo1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890  => 'bar1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'}
NUMBER_SHORT_HASH = {100   => 'bar'}
NUMBER_LONG_HASH = {1001234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890   => 'bar1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'}

str_short = 'foo'
str_long = 'foo1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'
sym_short = :foo
sym_long = :foo1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
num_short = 100
num_long = 1001234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890

n = 100_000_000
Benchmark.bmbm do |x|
 x.report('StringShort') {n.times {STRING_SHORT_HASH[str_short]}}
 x.report('StringLong') {n.times {STRING_LONG_HASH[str_long]}}
 x.report('SymbolShort') {n.times {SYMBOL_SHORT_HASH[sym_short]}}
 x.report('SymbolLong') {n.times {SYMBOL_LONG_HASH[sym_long]}}
 x.report('NumberShort') {n.times {NUMBER_SHORT_HASH[num_short]}}
 x.report('NumberLong') {n.times {NUMBER_LONG_HASH[num_long]}}
end 